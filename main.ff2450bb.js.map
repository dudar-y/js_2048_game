{"version":3,"sources":["scripts/main.js"],"names":["gameField","document","querySelector","tBodies","startButton","scoreInfo","scoreCounter","rows","actionCounter","blockedCells","getRandomNumber","randomize","Math","floor","random","length","getRandomIndex","max","addRandomNumber","num","row","cell","children","innerText","classList","add","repeater","f","count","i","isGameLost","result","forEach","cells","value","columns","fieldRows","column","push","looseGame","remove","winGame","startGame","style","outline","getAllCells","className","looseMessage","winMessage","querySelectorAll","getFreeCells","filter","moveCells","firsCell","secondCell","firstValue","Number","secondValue","cellsCompare","includes","moveRight","moveLeft","moveUp","moveDown","addEventListener","e","freeCells","key"],"mappings":"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","file":"main.ff2450bb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('.game-field').tBodies[0];\nconst startButton = document.querySelector('.start');\nconst scoreInfo = document.querySelector('.game-score');\nlet scoreCounter = 0;\nconst rows = [...gameField.rows];\nlet actionCounter = 0;\n\nconst blockedCells = [];\n\nfunction getRandomNumber() {\n  const randomize = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n  const index = Math.floor(Math.random() * randomize.length);\n\n  return randomize[index];\n};\n\nfunction getRandomIndex(max) {\n  return Math.floor(Math.random() * max);\n};\n\nfunction addRandomNumber(num) {\n  const row = rows[getRandomIndex(4)];\n  const cell = row.children[getRandomIndex(4)];\n\n  if (!cell.innerText) {\n    cell.innerText = num;\n    cell.classList.add(`field-cell--${num}`);\n  } else {\n    addRandomNumber(num);\n  };\n};\n\nfunction repeater(f, count) {\n  for (let i = 0; i < count; i++) {\n    f();\n  };\n};\n\nfunction isGameLost() {\n  let result = true;\n\n  [...gameField.rows].forEach(row => {\n    const cells = [...row.cells];\n\n    for (let i = 0; i < cells.length - 1; i++) {\n      const value = cells[i].innerText;\n      const nextValue = cells[i + 1].innerText;\n\n      if ((value === nextValue) || value === '') {\n        result = false;\n\n        return;\n      };\n    };\n  });\n\n  if (result) {\n    const columns = [];\n    const fieldRows = [...gameField.rows];\n\n    for (let i = 0; i < fieldRows.length; i++) {\n      const column = [];\n\n      fieldRows.forEach(row => {\n        column.push([...row.cells][i]);\n      });\n\n      columns.push(column);\n    };\n\n    columns.forEach(column => {\n      for (let i = 0; i < column.length - 1; i++) {\n        const value = column[i].innerText;\n        const nextValue = column[i + 1].innerText;\n\n        if ((value === nextValue) || value === '') {\n          result = false;\n\n          return;\n        };\n      };\n    });\n  };\n\n  return result;\n};\n\nfunction looseGame() {\n  const messageLose = document.querySelector('.message-lose');\n\n  messageLose.classList.remove('hidden');\n};\n\nfunction winGame() {\n  const messageWin = document.querySelector('.message-win');\n\n  messageWin.classList.remove('hidden');\n};\n\nfunction startGame() {\n  startButton.classList.remove('start');\n  startButton.style.outline = 'none';\n  startButton.classList.add('restart');\n\n  if (startButton.innerText === 'Start') {\n    startButton.innerText = 'Restart';\n\n    const startMessage = document.querySelector('.message-start');\n\n    startMessage.classList.add('hidden');\n  } else {\n    scoreCounter = 0;\n    scoreInfo.innerText = scoreCounter;\n\n    const cells = getAllCells();\n\n    cells.forEach(cell => {\n      cell.className = 'field-cell';\n      cell.innerText = '';\n    });\n\n    const looseMessage = document.querySelector('.message-lose');\n    const winMessage = document.querySelector('.message-win');\n\n    if (looseMessage) {\n      looseMessage.classList.add('hidden');\n    };\n\n    if (winMessage) {\n      winMessage.classList.add('hidden');\n    }\n  };\n\n  addRandomNumber(getRandomNumber());\n  addRandomNumber(getRandomNumber());\n};\n\nfunction getAllCells() {\n  return [...document.querySelectorAll('.field-cell')];\n};\n\nfunction getFreeCells() {\n  return [...document.querySelectorAll('.field-cell')]\n    .filter(cell => cell.innerText === '');\n};\n\nfunction moveCells(firsCell, secondCell) {\n  const firstValue = Number(firsCell.innerText);\n  const secondValue = Number(secondCell.innerText);\n\n  const cellsCompare = firstValue !== 0 && firstValue === secondValue\n    && !blockedCells.includes(firsCell);\n\n  if (firstValue !== 0 && secondValue === 0) {\n    firsCell.className = 'field-cell';\n    firsCell.innerText = '';\n    secondCell.innerText = firstValue;\n    secondCell.classList.add(`field-cell--${firstValue}`);\n    actionCounter++;\n  };\n\n  if (cellsCompare) {\n    firsCell.className = 'field-cell';\n    firsCell.innerText = '';\n    secondCell.innerText = firstValue * 2;\n    secondCell.classList.add(`field-cell--${firstValue * 2}`);\n    blockedCells.push(secondCell);\n\n    scoreCounter += Number(secondCell.innerText);\n    scoreInfo.innerText = scoreCounter;\n    actionCounter++;\n\n    if (secondCell.innerText === '2048') {\n      winGame();\n    };\n  };\n};\n\nconst moveRight = () => {\n  [...gameField.rows].forEach(row => {\n    const cells = [...row.cells];\n\n    for (let i = 2; i >= 0; i--) {\n      const firsCell = cells[i];\n      const secondCell = cells[i + 1];\n\n      moveCells(firsCell, secondCell);\n    };\n  });\n};\n\nconst moveLeft = () => {\n  [...gameField.rows].forEach(row => {\n    const cells = [...row.cells];\n\n    for (let i = 1; i < 4; i++) {\n      const firsCell = cells[i];\n      const secondCell = cells[i - 1];\n\n      moveCells(firsCell, secondCell);\n    };\n  });\n};\n\nconst moveUp = () => {\n  const columns = [];\n  const fieldRows = [...gameField.rows];\n\n  for (let i = 0; i < fieldRows.length; i++) {\n    const column = [];\n\n    fieldRows.forEach(row => {\n      column.push([...row.cells][i]);\n    });\n\n    columns.push(column);\n  };\n\n  columns.forEach(column => {\n    for (let i = 1; i < 4; i++) {\n      const firsCell = column[i];\n      const secondCell = column[i - 1];\n\n      moveCells(firsCell, secondCell);\n    };\n  });\n};\n\nconst moveDown = () => {\n  const columns = [];\n  const fieldRows = [...gameField.rows];\n\n  for (let i = 0; i < fieldRows.length; i++) {\n    const column = [];\n\n    fieldRows.forEach(row => {\n      column.push([...row.cells][i]);\n    });\n\n    columns.push(column);\n  };\n\n  columns.forEach(column => {\n    for (let i = 2; i >= 0; i--) {\n      const firstCell = column[i];\n      const secondCell = column[i + 1];\n\n      moveCells(firstCell, secondCell);\n    };\n  });\n};\n\nstartButton.addEventListener('click', (e) => {\n  startGame();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  const freeCells = getFreeCells();\n\n  switch (e.key) {\n    case 'ArrowRight':\n      repeater(moveRight, 3);\n      break;\n\n    case 'ArrowLeft':\n      repeater(moveLeft, 3);\n      break;\n\n    case 'ArrowUp':\n      repeater(moveUp, 3);\n      break;\n\n    case 'ArrowDown':\n      repeater(moveDown, 3);\n      break;\n\n    default:\n      return;\n  };\n\n  if (actionCounter > 0) {\n    addRandomNumber(getRandomNumber());\n\n    actionCounter = 0;\n\n    blockedCells.length = 0;\n  };\n\n  if (freeCells.length === 0) {\n    const lost = isGameLost();\n\n    if (lost) {\n      looseGame();\n    };\n  };\n});\n"]}